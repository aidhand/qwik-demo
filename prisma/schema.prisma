generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "cockroachdb"
//   url      = env("ROACH_URL")
// }

// enum crdb_internal_region {
//   gcp_asia_southeast1 @map("gcp-asia-southeast1")
//   gcp_europe_west1    @map("gcp-europe-west1")
//   gcp_us_west2        @map("gcp-us-west2")
// }

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) // @id @default(dbgenerated("gen_random_uuid()"))
  email     String   @unique
  name      String?
  tokens    Token[]
  units     Unit[]
  notes     Note[]
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  id        String   @id @default(uuid()) // @id @default(dbgenerated("gen_random_uuid()"))
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Unit {
  id        String   @id @default(uuid()) // @id @default(dbgenerated("gen_random_uuid()"))
  code      String
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id        String   @id @default(uuid()) // @id @default(dbgenerated("gen_random_uuid()"))
  name      String
  content   String?
  completed Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        String   @id @default(uuid()) // @id @default(dbgenerated("gen_random_uuid()"))
  name      String
  content   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
